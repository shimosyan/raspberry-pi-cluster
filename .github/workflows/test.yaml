name: Test
on:
  push:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      PM_API_TOKEN_ID: ${{ secrets.PM_API_TOKEN_ID }}
      PM_API_TOKEN_SECRET: ${{ secrets.PM_API_TOKEN_SECRET }}
      PM_HTTP_HEADERS: CF-Access-Client-Id,${{ secrets.CF_ACCESS_CLIENT_ID }},CF-Access-Client-Secret,${{ secrets.CF_ACCESS_CLIENT_SECRET }}

    outputs:
      has_new_vm: ${{ steps.extract.outputs.has_new_vm }}
      vm_list: ${{ steps.extract.outputs.vm_list }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Proxmox Terraform Init
        run: terraform init
        working-directory: ./proxmox

      - name: Proxmox Terraform Format
        id: fmt
        run: terraform fmt -recursive -check
        working-directory: ./proxmox

      - name: Proxmox Terraform Plan
        id: plan
        run: terraform plan -parallelism=1 -no-color -input=false -var="root_pw=${{ secrets.DEFAULT_ROOT_PW }}"
        working-directory: ./proxmox

      - name: Proxmox Terraform Deploy
        id: deploy
        run: terraform apply -auto-approve -parallelism=1 -no-color -input=false -var="root_pw=${{ secrets.DEFAULT_ROOT_PW }}"
        working-directory: ./proxmox

      # Terraform Apply の出力から proxmox_lxc.k8s が Create されたログを抽出して、ログから VM ID のみ抽出し複数の場合はカンマ区切りに整形する
      - name: Extract Created VM
        id: extract
        env:
          DEPLOY_RESULT: "${{ steps.deploy.outputs.stdout }}" # terraform deploy の出力を変数に入れる
        run: |
          EXTRACT_RESULT=$(echo "$DEPLOY_RESULT" | grep -E 'proxmox_lxc.k8s\[".+?"\]: Creation complete after .+? \[id=.+?\]' || true)

          if [ ! -z "$EXTRACT_RESULT" ]; then
            VM_ID=$(echo "$EXTRACT_RESULT" | sed -e 's/^.\+\[id=.\+\/lxc\/\([0-9]\+\)\].*$/\1/gi' )

            VM_LIST=$(echo "$VM_ID" |  tr '\n' ',' |  sed -e 's/,$/\n/g')
            echo -n "New VM List = $VM_LIST"

            echo "has_new_vm=true" >> "$GITHUB_OUTPUT"
            echo "vm_list=$(echo -n "$VM_LIST")" >> "$GITHUB_OUTPUT"
            exit 0;
          fi

          echo "No new vm."
          echo "has_new_vm=false" >> "$GITHUB_OUTPUT"

  # Extract Create VM で出力した has_new_vm が 1 のときだけ実行する
  proxmox-ansible:
    needs: terraform # job.terraform に依存するようにする
    if: needs.terraform.outputs.has_new_vm == 'true'
    runs-on: [self-hosted, proxmox-ansible]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Playbook
        run: |
          ansible-playbook playbook-for-proxmox-hosts.yaml --extra-vars "vm_id=${VM_LIST}"
        working-directory: ./ansible
        env:
         VM_LIST: ${{needs.terraform.outputs.vm_list}}
