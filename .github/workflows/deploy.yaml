name: Proxmox Deploy
on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      PM_API_TOKEN_ID: ${{ secrets.PM_API_TOKEN_ID }}
      PM_API_TOKEN_SECRET: ${{ secrets.PM_API_TOKEN_SECRET }}
      PM_HTTP_HEADERS: CF-Access-Client-Id,${{ secrets.CF_ACCESS_CLIENT_ID }},CF-Access-Client-Secret,${{ secrets.CF_ACCESS_CLIENT_SECRET }}

    outputs:
      lxc_vm_list: ${{ steps.extract.outputs.lxc_vm_list }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Proxmox Terraform Init
        run: terraform init
        working-directory: proxmox

      - name: Proxmox Terraform Format
        id: fmt
        run: terraform fmt -recursive -check
        working-directory: proxmox

      - name: Proxmox Terraform Plan
        id: plan
        run: terraform plan -parallelism=1 -no-color -input=false -var="root_pw=${{ secrets.DEFAULT_ROOT_PW }}"
        working-directory: proxmox

      - name: Proxmox Terraform Deploy
        id: deploy
        run: terraform apply -auto-approve -parallelism=1 -no-color -input=false -var="root_pw=${{ secrets.DEFAULT_ROOT_PW }}"
        working-directory: proxmox

      # Terraform Apply の出力から proxmox_lxc.k8s が Create されたログを抽出して、ログから LXC の VM ID と terraform の Resource ID を抽出し複数の場合はカンマ区切りに整形する
      - name: Extract Created LXC VM ID
        id: extract
        env:
          DEPLOY_RESULT: "${{ steps.deploy.outputs.stdout }}" # terraform deploy の出力を変数に入れる
        run: |
          EXTRACT_RESULT=$(echo "$DEPLOY_RESULT" | grep -E 'proxmox_lxc\..+?: Creation complete after .+? \[id=.+?\]' || true)

          echo "$EXTRACT_RESULT"
          echo ""

          if [ ! -z "$EXTRACT_RESULT" ]; then
            LXC_VM_ID_RES_ID=$(echo "$EXTRACT_RESULT" | sed -e 's/^proxmox_lxc\.\([a-zA-Z0-9_-]\+\).\+\[id=.\+\/lxc\/\([0-9]\+\)\].*$/\2:\1/gi' )

            # e.g 100:sample1,102:sample2
            LXC_VM_LIST=$(echo "$LXC_VM_ID_RES_ID" |  tr '\n' ',' |  sed -e 's/,$/\n/g')
            echo -n "New LXC VM List = $LXC_VM_LIST"

            echo "lxc_vm_list=$(echo -n "$LXC_VM_LIST")" >> "$GITHUB_OUTPUT"
            exit 0;
          fi

          echo "No new lxc."

  # Extract Create LXC で出力した lxc_vm_list に登録されているときだけ実行する
  ansible-for-proxmox-lxc:
    needs: terraform # job.terraform に依存するようにする
    if: needs.terraform.outputs.lxc_vm_list != ''
    runs-on: [self-hosted, proxmox-ansible]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Script List
        run: |
          HOST_FILE=$(ls -F ./host  | grep -v / | sed "s/*//g")
          CONTAINER_FILE=$(ls -F ./container  | grep -v / | sed "s/*//g")

          HOST_FILE_LIST=$(echo "$HOST_FILE" |  tr '\n' ',' |  sed -e 's/,$/\n/g')
          CONTAINER_FILE_LIST=$(echo "$CONTAINER_FILE" |  tr '\n' ',' |  sed -e 's/,$/\n/g')

          echo -n "HOST_FILE_LIST = $HOST_FILE_LIST"
          echo -n "CONTAINER_FILE_LIST = $CONTAINER_FILE_LIST"

          echo "HOST_FILE_LIST=$HOST_FILE_LIST" >> $GITHUB_ENV
          echo "CONTAINER_FILE_LIST=$CONTAINER_FILE_LIST" >> $GITHUB_ENV

        working-directory: scripts/lxc
      - name: Run Playbook
        run: |
          ansible-playbook playbook-proxmox-lxc.yaml --extra-vars 'lxc_vm_id="${{ env.LXC_VM_LIST }}",host_script_file="${{ env.HOST_FILE_LIST }}",container_script_file="${{ env.CONTAINER_FILE_LIST }}"'
        working-directory: ansible
        env:
          LXC_VM_LIST: ${{needs.terraform.outputs.lxc_vm_list}}
