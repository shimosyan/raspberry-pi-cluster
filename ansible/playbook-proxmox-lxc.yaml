- hosts: proxmox
  become: yes
  vars:
    lxc_vm_id: '[]'
    host_script_file: ""
    container_script_file: ""

  tasks:
    # JSON文字列をAnsibleの配列に変換
    - name: Parse LXC VM list from JSON
      set_fact:
        lxc_vm_list: "{{ lxc_vm_id | from_json }}"

    - debug: var=lxc_vm_list

    - name: Create the host script file list
      set_fact:
        host_script_file_list: "{{ host_script_file.split(',') }}"

    - name: Create the container script file list
      set_fact:
        container_script_file_list: "{{ container_script_file.split(',') }}"

    - debug: var=host_script_file_list

    - debug: var=container_script_file_list

    - name: Pull Script
      ansible.builtin.shell:
        cmd: curl https://raw.githubusercontent.com/shimosyan/raspberry-pi-cluster/master/ansible/lxc_setup.sh?$(date +%s) > /root/lxc_setup.sh

    - name: Grand Permission to Script
      ansible.builtin.shell:
        cmd: chmod +x /root/lxc_setup.sh

    - name: Make Dir
      ansible.builtin.shell:
        cmd: rm -r /root/scripts && mkdir -p /root/scripts/host && mkdir -p /root/scripts/container

    - name: Pull Host Script
      ansible.builtin.shell:
        cmd: curl https://raw.githubusercontent.com/shimosyan/raspberry-pi-cluster/master/scripts/lxc/host/{{ item }}?$(date +%s) > "/root/scripts/host/{{ item }}"
      loop: "{{ host_script_file_list }}"

    - name: Grand Permission to Host Script
      ansible.builtin.shell:
        cmd: chmod +x "/root/scripts/host/{{ item }}"
      loop: "{{ host_script_file_list }}"

    - name: Pull Container Script
      ansible.builtin.shell:
        cmd: curl https://raw.githubusercontent.com/shimosyan/raspberry-pi-cluster/master/scripts/lxc/container/{{ item }}?$(date +%s) > "/root/scripts/container/{{ item }}"
      loop: "{{ container_script_file_list }}"


    # 配列の個数だけ全ノードに対して繰り返し実行する（対象じゃないノードは無視される）
    - name: Run Script
      ansible.builtin.shell:
        cmd: ~/lxc_setup.sh {{ item.id }} {{ item.resource }}
      register: return_from_shell # 実行結果を ansible 変数に入れる
      loop: "{{ lxc_vm_list }}"

    - name: Show Script Result
      debug:
        msg: "{{ item.stdout }}" # .stdout に標準出力の結果が入っている
      loop: "{{ return_from_shell.results | from_yaml | list }}"
